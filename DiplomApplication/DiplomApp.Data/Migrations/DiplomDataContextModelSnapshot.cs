// <auto-generated />
using DiplomApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DiplomApp.Data.Migrations
{
    [DbContext(typeof(DiplomDataContext))]
    partial class DiplomDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DiplomApp.Data.MessagesDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SortedByStudent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SortedProgram")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StringToSort")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MessagesDB");
                });

            modelBuilder.Entity("DiplomApp.Data.RatingsDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("BubleMark")
                        .HasColumnType("boolean");

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.Property<bool>("InsertionMark")
                        .HasColumnType("boolean");

                    b.Property<bool>("QuickMark")
                        .HasColumnType("boolean");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<bool>("SelectionMark")
                        .HasColumnType("boolean");

                    b.Property<bool>("ShakerMark")
                        .HasColumnType("boolean");

                    b.Property<bool>("ShellMark")
                        .HasColumnType("boolean");

                    b.Property<int>("TotalAttempts")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("RatingsDB");
                });

            modelBuilder.Entity("DiplomApp.Data.UsersDB", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUser"));

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdUser");

                    b.ToTable("UsersDB");
                });

            modelBuilder.Entity("DiplomApp.Data.RatingsDB", b =>
                {
                    b.HasOne("DiplomApp.Data.UsersDB", "User")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
